feat(api): Implement Game State API endpoints

Implement a complete Game State API for saving and loading game progress in the Tokyo Train Station Adventure game. This implementation follows the established architecture pattern used in other API endpoints.

Key components:
- Create Pydantic models for game state requests and responses
- Implement request and response adapters for data transformation
- Develop data access layer with mock storage for game states
- Add three endpoints:
  - POST /api/game/state - Save the current game state
  - GET /api/game/state/{playerId} - Load a saved game state
  - GET /api/game/state/saves/{playerId} - List all saved games for a player
- Write comprehensive tests for all components

The implementation includes proper validation, error handling, and logging. All tests are passing, confirming the functionality of the API.

This feature enables players to save their progress and continue their game later, which is essential for a good user experience in a language learning game.

Note: The current implementation uses in-memory storage, which would be replaced with a database in production.

Resolves: #ISSUE_NUMBER 